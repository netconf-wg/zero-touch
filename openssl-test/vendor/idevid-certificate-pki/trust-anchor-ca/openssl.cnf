# this is for generating the CSR
[ req ]
default_md              = sha256
prompt                  = no
distinguished_name      = distinguished_name

[ distinguished_name ]
countryName             = XX
stateOrProvinceName     = My State or Province
localityName            = My Locality
0.organizationName      = My Company
0.organizationalUnitName= Manufacturing
commonName              = IDevID_Trust_Anchor_CA



# this is for when performing ca operations, including
# signing self certificate...
[ ca ]
default_ca              = CA_default

[ CA_default ]
private_key             = private_key.pem
certificate             = ca_cert.pem
new_certs_dir           = signed_keys/
database                = index
serial                  = serial
name_opt                = ca_default
cert_opt                = ca_default
crlnumber               = crlnumber
default_crl_days        = 30
default_days            = 365
default_md              = sha256
preserve                = no
policy                  = policy_match
x509_extensions         = x509_extensions

[ policy_match ]
countryName             = optional
stateOrProvinceName     = optional
organizationName        = supplied
organizationalUnitName  = optional
commonName              = supplied

[ x509_extensions_for_self ]
subjectKeyIdentifier   = hash
basicConstraints       = CA:TRUE
keyUsage               = critical, keyCertSign, cRLSign
crlDistributionPoints  = URI:http://crl.vendor-x.net?ca=IDevID_Trust_Anchor_CA

[ x509_extensions ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always
basicConstraints       = CA:TRUE
keyUsage               = critical, keyCertSign, cRLSign
crlDistributionPoints  = URI:http://crl.vendor-x.net?ca=IDevID_Trust_Anchor_CA


# for when generating CRLs
[ crl_extensions ]
authorityKeyIdentifier = keyid:always
issuingDistributionPoint = critical, @crl_issuing_dp

[ crl_issuing_dp ]
fullname = URI:http://crl.vendor-x.net?ca=IDevID_Trust_Anchor_CA

